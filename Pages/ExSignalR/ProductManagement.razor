@page "/admin/product-management"
@inject NavigationManager navigation
@layout MainLayout

<style>
    .product-table img {
        width: 50px;
        height: 50px;
        object-fit: cover;
    }
</style>

<div class="container mt-4">
    <nav>
        <a href="#" class="text-primary">Product management</a> / <span class="text-muted">Add Product</span>
    </nav>

    <h2 class="mt-3">Product management (mới làm chức năng signlR cho button xóa)</h2>

    <button class="btn btn-success mb-3">Add new product</button>

    <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="Search product ...">
        <button class="btn btn-success">Search</button>
    </div>

    <table class="table table-bordered product-table">
        <thead class="table-light">
            <tr>
                <th>Id</th>
                <th>Image</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in products)
            {
                <tr>
                    <td>@item.Id</td>
                    <td><img src=@item.Image alt="Product Image"></td>
                    <td>@item.Price</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => Delete(item.Id)">Del</button>
                        <button class="btn btn-success btn-sm">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
    </nav>

</div>

@code {
    HubConnection roomHub;
    List<ProductVM> products = new List<ProductVM>();

    protected override async Task OnInitializedAsync()
    {
        roomHub = new HubConnectionBuilder().WithUrl(navigation.ToAbsoluteUri("/room-hub")).Build();
        //Kết nối
        await roomHub.StartAsync();

        //lắng nghe server hub
        roomHub.On<List<ProductVM>>("GetProducts", async (lstProduct) =>
        {
            products = lstProduct;
            await InvokeAsync(StateHasChanged);
        });
    }
    public async Task Delete(double id)
    {
        roomHub.InvokeAsync("DeleteProduct", id);
    }
    public async Task Dispose()
    {
        //Ngắt kết nối
        await roomHub.StopAsync();
    }
}